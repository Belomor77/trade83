////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПроведениеПоРегистрам()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
// Описание:
//  Проведение по регистрам оперативного учета.
//
Процедура ПроведениеПоРегистрам()
	
	Перем ТаблицаДокумента;
	Перем ТаблСписПартий, ТаблСписПартийКом;
	Перем ВремРегистры;
	Перем ВремОстаткиТМЦ, ВремРезервыТМЦ, ВремПартииНаличие;
	Перем ФирмаДляОстатковТМЦ;
//   	
//	// Удаление движений по регистрам.
//	Для Номер = 1 По Метаданные.Регистр() Цикл
//		ОчиститьДвижения("Регистр."+Метаданные.Регистр(Номер).Идентификатор);
//	КонецЦикла;
//	                          
//	ВремРегистры = СоздатьОбъект("Регистры"); 
//	ВремОстаткиТМЦ  	= ВремРегистры.ОстаткиТМЦ;
//	ВремРезервыТМЦ		= ВремРегистры.РезервыТМЦ;
//	ВремПартииНаличие 	= ВремРегистры.ПартииНаличие;
//	                                  
//	Если КодОперации = Перечисление.КодыОпераций.Сборка Тогда
//		
//		ВыгрузитьТабличнуюЧасть(ТаблицаДокумента); 
//		// надо привести таблицу к стандартно понимаемому процедурами проведения виду
//		ТаблицаДокумента.НоваяКолонка("СуммаУпр");
//		ТаблицаДокумента.НоваяКолонка("СуммаРуб");
//		ТаблицаДокумента.НоваяКолонка("Сумма");
//		ТаблицаДокумента.НоваяКолонка("СуммаНДС");
//		ТаблицаДокумента.НоваяКолонка("СуммаНП");
//		ТаблицаДокумента.НоваяКолонка("СтавкаНДС");
//		ТаблицаДокумента.НоваяКолонка("СтавкаНП");
//		ТаблицаДокумента.НоваяКолонка("ЦенаПрод");
//		ТаблицаДокумента.НоваяКолонка("ЦенаПродПриход");
//		ТаблицаДокумента.НоваяКолонка("ПродСтоимость");
//		ТаблицаДокумента.НоваяКолонка("СкидкаРуб");
//		ТаблицаДокумента.ВыбратьСтроки();
//		Пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл
//			ТаблицаДокумента.Количество = ТаблицаДокумента.Количество * ТаблицаДокумента.Коэффициент;
//		КонецЦикла;
//	
//	    ФирмаДляОстатковТМЦ = глФирмаДляОстатковТМЦ(Фирма);
//		
//		СписокПараметров=СоздатьОбъект("СписокЗначений");
//	
//		СписокПараметров.ДобавитьЗначение(ТекущийДокумент(),"ТекДок");
//		СписокПараметров.ДобавитьЗначение(Склад,			"Склад");
//		СписокПараметров.ДобавитьЗначение(Фирма,			"Фирма");
//		СписокПараметров.ДобавитьЗначение(ФирмаДляОстатковТМЦ,"ФирмаДляОстатковТМЦ");
//		СписокПараметров.ДобавитьЗначение(глКО.Сборка,		"КодОперации");
//	
//		глФильтрОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремОстаткиТМЦ,ВремРезервыТМЦ);
//		глФильтрПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров, ВремПартииНаличие);
//	    
//		Если ИтогиАктуальны()=0 Тогда
//			ВремРегистры.Актуальность(1);
//			ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
//		КонецЕсли;
//	
//		Если глСписаниеОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров,ВремОстаткиТМЦ,ВремРезервыТМЦ)=0 Тогда
//			Возврат;
//		КонецЕсли;                   
//
//		глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
//		
//		// запомним, что мы "продали" принятые на комиссию товары...
//		ТаблСписПартийКом.ВыбратьСтроки();
//		Пока ТаблСписПартийКом.ПолучитьСтроку()=1 Цикл                    
//			Регистр.РеализованныйТовар.Фирма			= ТаблСписПартийКом.Фирма;
//			Регистр.РеализованныйТовар.Договор 			= ТаблСписПартийКом.Партия.ДоговорПоставщика;
//			Регистр.РеализованныйТовар.Номенклатура 	= ТаблСписПартийКом.Номенклатура;
//			Регистр.РеализованныйТовар.Партия 			= ТаблСписПартийКом.Партия;
//			Регистр.РеализованныйТовар.ДокПродажи		= ТекущийДокумент();
//			Регистр.РеализованныйТовар.Количество 		= ТаблСписПартийКом.Количество;
//			Регистр.РеализованныйТовар.ПродСтоимость 	= ТаблСписПартийКом.СуммаРуб; // рублевая учетная цена
//			Регистр.РеализованныйТовар.ДвижениеПриходВыполнить();
//		КонецЦикла;                                                                       
//		                                                                                  
//		// теперь надо оприходовать комплект                   
//		
//		// - - - - - остатки - - - - - - - - - -
//		Регистр.ОстаткиТМЦ.Фирма			= Фирма;
//		Регистр.ОстаткиТМЦ.Номенклатура 	= Комплект;
//		Регистр.ОстаткиТМЦ.Склад 			= СкладПолучатель;
//		
//		Регистр.ОстаткиТМЦ.Количество 		= Окр(КоличествоКомп*КоэффициентКомп, 3);
//		
//		Регистр.ОстаткиТМЦ.Внутреннее = 0;
//		
//		Регистр.ОстаткиТМЦ.ДвижениеПриходВыполнить();
//		
//		// - - - - - партии - - - - - - - - - -
//		
//		// Если мы списали принятый товар, то НДС надо включать в себестоимость
//		ТаблСписПартий.ВыбратьСтроки();
//		Пока ТаблСписПартий.ПолучитьСтроку() = 1 Цикл
//		    Если ТаблСписПартий.СтатусПартии = Перечисление.СтатусыПартии.Т_Принятый Тогда
//		        ТаблСписПартий.СуммаБезНДС = ТаблСписПартий.СуммаРуб;
//		    КонецЕсли;
//		КонецЦикла;
//		
//		СпрПартии=СоздатьОбъект("Справочник.Партии");
//		Если СпрПартии.НайтиЭлемент(ПартияКомп) = 1 Тогда
//			СпрПартии.ПриходныйДокумент = ТекущийДокумент();
//			Попытка
//				СпрПартии.Записать();
//			Исключение   
//				Сообщить(ОписаниеОшибки());
//				СтатусВозврата(0);Возврат;
//			КонецПопытки;
//		КонецЕсли;
//		
//		//измерения
//		Регистр.ПартииНаличие. Фирма			= Фирма;
//		Регистр.ПартииНаличие. МОЛ				= СкладПолучатель.МОЛ;
//		Регистр.ПартииНаличие. Номенклатура		= Комплект;
//		Регистр.ПартииНаличие. СтатусПартии		= глПолучитьСтатусПартииПрихода(ВидТМЦКомп,Комплект,глКО.Сборка);
//		Если (Фирма.ЮрЛицо.МетодРасчетаСебестоимости.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.FIFO) 
//	 	 или (Фирма.ЮрЛицо.МетодРасчетаСебестоимости.Получить(ДатаДок) = Перечисление.МетодыРасчетаСебестоимости.LIFO) Тогда
//			Регистр.ПартииНаличие. Партия			= ПартияКомп;
//			Регистр.ПартииНаличие. ДатаПартии		= ДатаДок;
//		Иначе
//			Регистр.ПартииНаличие. Партия			= "";
//			Регистр.ПартииНаличие. ДатаПартии		= "";
//		КонецЕсли;
//		
//		// ресурсы
//		Регистр.ПартииНаличие. Количество		= Окр(КоличествоКомп*КоэффициентКомп, 3);
//		Регистр.ПартииНаличие. СуммаУпр			= ТаблСписПартий.Итог("СуммаУпр");
//		Регистр.ПартииНаличие. СуммаРуб			= ТаблСписПартий.Итог("СуммаРуб");
//		Регистр.ПартииНаличие. СуммаБезНДС		= ТаблСписПартий.Итог("СуммаБезНДС");
//		// реквизиты
//		Регистр.ПартииНаличие. КодОперации		= глКО.Сборка;
//			
//		Регистр.ПартииНаличие. ДвижениеПриходВыполнить();
//		
//	Иначе      // разукомплектация
//		СписокПараметров=СоздатьОбъект("СписокЗначений");
//	
//		СписокПараметров.ДобавитьЗначение(ТекущийДокумент(),"ТекДок");
//		СписокПараметров.ДобавитьЗначение(Склад,			"Склад");
//		СписокПараметров.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Контрагенты"),	"Контрагент");
//		СписокПараметров.ДобавитьЗначение(ПолучитьПустоеЗначение("Справочник.Договоры"),		"Договор");
//	
//		СписокПараметров.ДобавитьЗначение(Фирма,			"Фирма");
//		
//	    ФирмаДляОстатковТМЦ = глФирмаДляОстатковТМЦ(Фирма);
//		СписокПараметров.ДобавитьЗначение(ФирмаДляОстатковТМЦ,			"ФирмаДляОстатковТМЦ");
//		
//		СписокПараметров.ДобавитьЗначение(глКО.Разукомплектация,"КодОперации");
//		
//		// спишем комплект
//		ТаблицаДокумента= СоздатьОбъект("ТаблицаЗначений");
//		ТаблицаДокумента.НоваяКолонка("НомерСтрокиДокумента");
//		ТаблицаДокумента.НоваяКолонка("ВидТМЦ");
//		ТаблицаДокумента.НоваяКолонка("Номенклатура");
//		ТаблицаДокумента.НоваяКолонка("СуммаУпр");
//		ТаблицаДокумента.НоваяКолонка("СуммаРуб");
//		ТаблицаДокумента.НоваяКолонка("Количество");
//		ТаблицаДокумента.НоваяКолонка("Сумма");
//		ТаблицаДокумента.НоваяКолонка("СуммаНДС");
//		ТаблицаДокумента.НоваяКолонка("СуммаНП");
//		ТаблицаДокумента.НоваяКолонка("СтавкаНДС");
//		ТаблицаДокумента.НоваяКолонка("СтавкаНП");
//		ТаблицаДокумента.НоваяКолонка("Партия");
//		ТаблицаДокумента.НоваяКолонка("ЦенаПрод");
//		ТаблицаДокумента.НоваяКолонка("ЦенаПродПриход");
//		ТаблицаДокумента.НоваяКолонка("ПродСтоимость");
//		ТаблицаДокумента.НоваяКолонка("СкидкаРуб");
//		
//		ТаблицаДокумента.НоваяСтрока();            
//		ТаблицаДокумента.НомерСтрокиДокумента = ТаблицаДокумента.НомерСтроки;
//		ТаблицаДокумента.ВидТМЦ       	= ВидТМЦКомп;
//		ТаблицаДокумента.Номенклатура 	= Комплект;
//		ТаблицаДокумента.Партия       	= ПартияКомп;
//		ТаблицаДокумента.СуммаУпр  		= 0;
//		ТаблицаДокумента.СуммаРуб  		= 0;
//		ТаблицаДокумента.Количество		= Окр(КоличествоКомп*КоэффициентКомп, 3);
//		ТаблицаДокумента.Сумма     		= 0;
//		ТаблицаДокумента.СуммаНДС  		= 0;
//		ТаблицаДокумента.СуммаНП   		= 0;
//		ТаблицаДокумента.ЦенаПрод  		= 0;
//		ТаблицаДокумента.ПродСтоимость  = 0;
//		ТаблицаДокумента.СтавкаНДС = ПолучитьПустоеЗначение("Перечисление.СтавкиНДС");
//		ТаблицаДокумента.СтавкаНП  = ПолучитьПустоеЗначение("Справочник.СтавкиНП");
//		          
//		глФильтрОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремОстаткиТМЦ,ВремРезервыТМЦ);
//		глФильтрПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров, ВремПартииНаличие);
//	    
//		Если ИтогиАктуальны()=0 Тогда
//			ВремРегистры.Актуальность(1);
//			ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
//		КонецЕсли;
//		
//		Если глСписаниеОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров,ВремОстаткиТМЦ,ВремРезервыТМЦ)=0 Тогда
//			Возврат;
//		КонецЕсли;                   
//		
//		глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,ТаблСписПартий,ТаблСписПартийКом);
//		
//		// запомним, что мы "продали" принятые на комиссию товары...
//		ТаблСписПартийКом.ВыбратьСтроки();
//		Пока ТаблСписПартийКом.ПолучитьСтроку()=1 Цикл                    
//			Регистр.РеализованныйТовар.Фирма			= ТаблСписПартийКом.Фирма;
//			Регистр.РеализованныйТовар.Договор 			= ТаблСписПартийКом.Партия.ДоговорПоставщика;
//			Регистр.РеализованныйТовар.Номенклатура 	= ТаблСписПартийКом.Номенклатура;
//			Регистр.РеализованныйТовар.Партия 			= ТаблСписПартийКом.Партия;
//			Регистр.РеализованныйТовар.ДокПродажи		= ТекущийДокумент();
//			Регистр.РеализованныйТовар.Количество 		= ТаблСписПартийКом.Количество;
//			Регистр.РеализованныйТовар.ПродСтоимость 	= ТаблСписПартийКом.СуммаРуб; // рублевая учетная цена
//			Регистр.РеализованныйТовар.ДвижениеПриходВыполнить();
//		КонецЦикла;                                                                       
//		
//		// теперь надо оприходовать комплектующие
//		СписокПараметров.Установить("Склад",        СкладПолучатель); // оприходование
//		
//		ВыгрузитьТабличнуюЧасть(ТаблицаДокумента);
//		// надо привести таблицу к стандартно понимаемому процедурами проведения виду
//		ТаблицаДокумента.НоваяКолонка("СуммаУпр");
//		ТаблицаДокумента.НоваяКолонка("СуммаРуб");
//		ТаблицаДокумента.НоваяКолонка("Сумма");
//		ТаблицаДокумента.НоваяКолонка("СуммаНДС");
//		ТаблицаДокумента.НоваяКолонка("СуммаНП");
//		ТаблицаДокумента.НоваяКолонка("СтавкаНДС");
//		ТаблицаДокумента.НоваяКолонка("СтавкаНП");
//		ТаблицаДокумента.НоваяКолонка("ЦенаПрод");
//		ТаблицаДокумента.НоваяКолонка("ЦенаПродПриход");
//		ТаблицаДокумента.НоваяКолонка("ПродСтоимость");
//		ТаблицаДокумента.НоваяКолонка("СкидкаРуб");
//		
//		ОстСуммаУпр = ТаблСписПартий.Итог("СуммаУпр");
//		ОстСуммаРуб = ТаблСписПартий.Итог("СуммаРуб");
//		ОстСуммаНДС = ТаблСписПартий.Итог("СуммаРуб") - ТаблСписПартий.Итог("СуммаБезНДС");
//		
//		ВсегоСуммаУпр 	= ОстСуммаУпр;
//		ВсегоСуммаРуб 	= ОстСуммаРуб;
//		ВсегоСуммаНДС 	= ОстСуммаНДС;
//		
//		КолСтрок 	= ТаблицаДокумента.КоличествоСтрок();
//		ВсегоДоля 	= ТаблицаДокумента.Итог("СуммовойКоэфф");
//		ТаблицаДокумента.ВыбратьСтроки();
//		Пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл
//			ПоследняяСтрока = ?(ТаблицаДокумента.НомерСтроки = КолСтрок,1,0);
//			ТаблицаДокумента.Количество = ТаблицаДокумента.Количество * ТаблицаДокумента.Коэффициент;
//			ТаблицаДокумента.СуммаУпр 	= ?(ПоследняяСтрока = 1, ОстСуммаУпр, ?(ВсегоДоля = 0,0,Окр(ВсегоСуммаУпр*ТаблицаДокумента.СуммовойКоэфф/ВсегоДоля,2,1)));
//			ТаблицаДокумента.СуммаРуб	= ?(ПоследняяСтрока = 1, ОстСуммаРуб, ?(ВсегоДоля = 0,0,Окр(ВсегоСуммаРуб*ТаблицаДокумента.СуммовойКоэфф/ВсегоДоля,2,1)));
//			ТаблицаДокумента.Сумма		= ТаблицаДокумента.СуммаРуб;
//			ТаблицаДокумента.СуммаНДС	= ?(ПоследняяСтрока = 1, ОстСуммаНДС, ?(ВсегоДоля = 0,0,Окр(ВсегоСуммаНДС*ТаблицаДокумента.СуммовойКоэфф/ВсегоДоля,2,1)));
//			
//			ОстСуммаУпр = ОстСуммаУпр - ТаблицаДокумента.СуммаУпр;
//			ОстСуммаРуб = ОстСуммаРуб - ТаблицаДокумента.СуммаРуб;
//			ОстСуммаНДС = ОстСуммаНДС - ТаблицаДокумента.СуммаНДС;
//		КонецЦикла;  
//		
//		глПриходОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров);
//		глОприходованиеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров);
//		
//	КонецЕсли;                
//	
КонецПроцедуры // ПроведениеПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПроведения(Отказ, Режим)
//	
//	// Проверка заполненности обязательных реквизитов.
//	Если глВсеРеквизитыДокументаЗаполнены(Контекст,
//		"Фирма,Склад,СкладПолучатель,Комплект")=0 Тогда
//		Возврат;
//	КонецЕсли;
//	              
//	Если (Склад.РозничныйСклад = 1) 
//	 или (СкладПолучатель.РозничныйСклад = 1) 
//	 Тогда    
//	 	глНеПроводить(Контекст,"В документе выбран розничный склад. 
//	 	|Комплектация на таком складе не может быть произведена!");
//		Возврат;
//	КонецЕсли;
//	
//	Если КодОперации = Перечисление.КодыОпераций.Сборка Тогда
//		Если ПустоеЗначение(ВидТМЦКомп)=1 Тогда
//			глНеПроводить(Контекст,"Не указан вид ТМЦ собираемого комплекта!");
//			Возврат;
//		КонецЕсли;   
//	КонецЕсли;      
//	
//	// Проведение по регистрам оперативного учета.	
//	Если (ПустоеЗначение(ВидыДвижений) = 1) ИЛИ (Найти(ВидыДвижений, "Регистр") <> 0) Тогда
//		ПроведениеПоРегистрам();
//		
//		Если СтатусВозврата() = 0 Тогда
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	
//	глПриПроведении(Контекст, ВидыДвижений);
//	
КонецПроцедуры //ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, Режим)
	ЦеновойКоэфф_Итог = ТабличнаяЧасть1.Итог("ЦеновойКоэфф");
КонецПроцедуры
//
//////////////////////////////////////////////////////////////////////////////////
//// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
