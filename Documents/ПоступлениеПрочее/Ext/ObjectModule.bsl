////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПроведениеПоРегистрам()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
// Описание:
//  Проведение по регистрам оперативного учета.
//
Процедура ПроведениеПоРегистрам()
	
	Перем ВремРегистры;
	Перем ВремПоставщики;   
	Перем ТаблицаДокумента;
//	
//	// Удаление движений по регистрам.
//	Для Номер = 1 По Метаданные.Регистр() Цикл
//		ОчиститьДвижения("Регистр."+Метаданные.Регистр(Номер).Идентификатор);
//	КонецЦикла;
//   	
//	ТаблицаДокумента=глПодготовитьТаблицуДокумента(Контекст);
//	
//	СписокПараметров=СоздатьОбъект("СписокЗначений");
//	
//	СписокПараметров.ДобавитьЗначение(ТекущийДокумент(),"ТекДок");
//	СписокПараметров.ДобавитьЗначение(Фирма,		"Фирма");
//	СписокПараметров.ДобавитьЗначение(- 1,			"ЗнакДвижения"); // уменьшился долг клиента
//	                              
//	СписокПараметров.ДобавитьЗначение(глКО.Закупка,"КодОперации");  
//	
//	ВремРегистры = СоздатьОбъект("Регистры");
//	
//	ВремПоставщики = ВремРегистры.Поставщики;
//	глФильтрДолгов(Контекст, Договор, СписокПараметров, ВремПоставщики);
//	
//	Если ИтогиАктуальны() = 0 Тогда
//		ВремРегистры.Актуальность(1);
//		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
//	КонецЕсли;      
//	
//	ТаблицаДокумента.НоваяКолонка("КредДокумент");
//	ТаблицаДокумента.НоваяКолонка("ВидДолга");
//	
//	ТаблицаДокумента.ВыбратьСтроки();
//	Пока ТаблицаДокумента.ПолучитьСтроку()=1 Цикл
//		
//		ТаблицаДокумента.КредДокумент 	= ТекущийДокумент();   
//		
//		// Определим вид долга в зависимости от кода выбранного счета
//		КодСчета = Лев(Строка(ТаблицаДокумента.Счет), 4);
//		Если  (КодСчета = "08.5") или (Лев(КодСчета, 2) = "04") Тогда
//			ТаблицаДокумента.ВидДолга = глВД.ДолгЗаНМА;
//		ИначеЕсли  (Лев(КодСчета, 2) = "08") или (Лев(КодСчета, 2) = "01") Тогда
//			ТаблицаДокумента.ВидДолга = глВД.ДолгЗаОС;
//		Иначе
//			ТаблицаДокумента.ВидДолга		= глВД.ДолгЗаУслуги;
//		КонецЕсли;
//
//	КонецЦикла;                                                                       
//	
//	глДвижениеДолгов(Контекст,Договор,ТаблицаДокумента,СписокПараметров,ВремПоставщики,1);
//	                                  
КонецПроцедуры // ПроведениеПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПроведения(Отказ, Режим)
//	
//	// Проверка заполненности обязательных реквизитов.
//   	Если глВсеРеквизитыДокументаЗаполнены(Контекст,
//		"Фирма,Валюта,Контрагент,Договор")=0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	// Проведение по регистрам оперативного учета.	
//	Если (ПустоеЗначение(ВидыДвижений) = 1) ИЛИ (Найти(ВидыДвижений, "Регистр") <> 0) Тогда
//		ПроведениеПоРегистрам();
//		
//		Если СтатусВозврата() = 0 Тогда
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	
//	глПриПроведении(Контекст, ВидыДвижений);
//	
КонецПроцедуры //ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, Режим)
	Сумма_Итог = ТабличнаяЧасть1.Итог("Сумма");
	СуммаНДС_Итог = ТабличнаяЧасть1.Итог("СуммаНДС");
	СуммаНП_Итог = ТабличнаяЧасть1.Итог("СуммаНП");
КонецПроцедуры
//
//////////////////////////////////////////////////////////////////////////////////
//// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
