////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПроведениеПоРегистрам()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
// Описание:
//  Проведение по регистрам оперативного учета.
//
Процедура ПроведениеПоРегистрам()
	
	Перем ВремРегистры;
	Перем ВремОстаткиТМЦ, ВремПартииНаличие,ТаблСписПартийКом;
	Перем ФирмаДляОстатковТМЦ;
//	
//	// Удаление движений по регистрам.
//	Для Номер = 1 По Метаданные.Регистр() Цикл
//		ОчиститьДвижения("Регистр."+Метаданные.Регистр(Номер).Идентификатор);
//	КонецЦикла;
//   	
//	ТаблицаДокумента=глПодготовитьТаблицуДокумента(Контекст);
//	
//    ФирмаДляОстатковТМЦ = глФирмаДляОстатковТМЦ(Фирма);
//	СписокПараметров    = СоздатьОбъект("СписокЗначений");
//	
//	СписокПараметров.ДобавитьЗначение(ТекущийДокумент(),"ТекДок");
//	СписокПараметров.ДобавитьЗначение(Склад,			"Склад");
//	СписокПараметров.ДобавитьЗначение(Фирма,			"Фирма");
//	СписокПараметров.ДобавитьЗначение(ФирмаДляОстатковТМЦ,"ФирмаДляОстатковТМЦ");
//
//	Если ВосстанавливатьНДС = 0 Тогда
//		СписокПараметров.ДобавитьЗначение(глКО.Списание,	"КодОперации");   
//	Иначе
//		СписокПараметров.ДобавитьЗначение(глКО.СписаниеВосстановливатьНДС,	"КодОперации");   
//	КонецЕсли;
//	
//		
//	ВремРегистры = СоздатьОбъект("Регистры"); 
//	ВремОстаткиТМЦ  	= ВремРегистры.ОстаткиТМЦ;
//	ВремПартииНаличие 	= ВремРегистры.ПартииНаличие; 
//	Если Константа.КонтролироватьРезервПриСписании = 1 Тогда
//	    ВремРезервыТМЦ = ВремРегистры.РезервыТМЦ;   
//	Иначе
//		ВремРезервыТМЦ = "";
//	КонецЕсли;
//	
//	глФильтрОстатковТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремОстаткиТМЦ,ВремРезервыТМЦ);
//	глФильтрПартийТМЦ  (Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие);
//	    
//	Если ИтогиАктуальны()=0 Тогда
//		ВремРегистры.Актуальность(1);
//		ВремРегистры.РассчитатьРегистрыНа(ТекущийДокумент());
//	КонецЕсли;
//	
//	Если глСписаниеОстатковТМЦ	(Контекст,ТаблицаДокумента,СписокПараметров,ВремОстаткиТМЦ,ВремРезервыТМЦ)=0 Тогда
//		Возврат;
//	КонецЕсли;                   
//
//	глСписаниеПартийТМЦ(Контекст,ТаблицаДокумента,СписокПараметров,ВремПартииНаличие,,ТаблСписПартийКом);
//	
//	// запомним, что мы "продали" принятые на комиссию товары...
//	ТаблСписПартийКом.ВыбратьСтроки();
//	Пока ТаблСписПартийКом.ПолучитьСтроку()=1 Цикл                    
//		Регистр.РеализованныйТовар.Фирма			= ТаблСписПартийКом.Фирма;
//		Регистр.РеализованныйТовар.Договор 			= ТаблСписПартийКом.Партия.ДоговорПоставщика;
//		Регистр.РеализованныйТовар.Номенклатура 	= ТаблСписПартийКом.Номенклатура;
//		Регистр.РеализованныйТовар.Партия 			= ТаблСписПартийКом.Партия;
//		Регистр.РеализованныйТовар.ДокПродажи		= ТекущийДокумент();
//		Регистр.РеализованныйТовар.Количество 		= ТаблСписПартийКом.Количество;
//		Регистр.РеализованныйТовар.ПродСтоимость 	= ТаблСписПартийКом.СуммаРуб; // рублевая учетная цена
//		Регистр.РеализованныйТовар.ДвижениеПриходВыполнить();
//	КонецЦикла;                                                                       
//
КонецПроцедуры // ПроведениеПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПроведения(Отказ, Режим)
//	
//	// Проверка заполненности обязательных реквизитов.
//   	Если глВсеРеквизитыДокументаЗаполнены(Контекст,
//		"Фирма,Склад,Валюта")=0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	// Проведение по регистрам оперативного учета.	
//	Если (ПустоеЗначение(ВидыДвижений) = 1) ИЛИ (Найти(ВидыДвижений, "Регистр") <> 0) Тогда
//		ПроведениеПоРегистрам();
//		
//		Если СтатусВозврата() = 0 Тогда
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	
//	глПриПроведении(Контекст, ВидыДвижений);
//	
КонецПроцедуры //ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, Режим)
	Сумма_Итог = ТабличнаяЧасть1.Итог("Сумма");
КонецПроцедуры
//
//////////////////////////////////////////////////////////////////////////////////
//// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
