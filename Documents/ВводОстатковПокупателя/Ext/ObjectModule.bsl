////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ
//
//******************************************************************************
// ПроведениеПоРегистрам()
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Нет.
//
// Описание:
//  Проведение по регистрам оперативного учета.
//
Процедура ПроведениеПоРегистрам()
//	
//	// Удаление движений по регистрам.
//	Для Номер = 1 По Метаданные.Регистр() Цикл
//		ОчиститьДвижения("Регистр."+Метаданные.Регистр(Номер).Идентификатор);
//	КонецЦикла;
//   	
//	РегВзаим = Регистр.Покупатели;
//	РегКнига = Регистр.КнигаПродаж;   
//	МетодОпределенияВыручки = Фирма.ЮрЛицо.МетодОпределенияВыручки.Получить(ДатаДок);
//	
//	Если      ВидОперации = Перечисление.ВидыОперацийПоВводуОстатков.ОстаткиДолгаПокупателяНам Тогда
//		ЗнакДвижения = +1;
//	ИначеЕсли ВидОперации = Перечисление.ВидыОперацийПоВводуОстатков.ОстаткиДолгаПокупателю Тогда
//		ЗнакДвижения = -1;
//	ИначеЕсли ВидОперации = Перечисление.ВидыОперацийПоВводуОстатков.ОстаткиКнигиПродаж Тогда
//		ЗнакДвижения = 0;
//	КонецЕсли;
//	
//	РегВзаим.Фирма        = Фирма;
//	РегВзаим.Договор      = Договор;
//	РегВзаим.КодОперации  = Перечисление.КодыОпераций.ВводОстатков;
//	
//	РегКнига.КодОперации  = Перечисление.КодыОпераций.ВводОстатков;
//	
//    ВыбратьСтроки();
//	Пока ПолучитьСтроку() = 1 Цикл
//		
//	   	Если глВсеРеквизитыДокументаЗаполнены(Контекст,"ВидДолга")=0 Тогда
//			Возврат;
//		КонецЕсли;
//		
//		РегВзаим.КредДокумент = ?(КредДокумент.Выбран()=1,КредДокумент,ТекущийДокумент());
//
//		РегВзаим.ВидДолга  = ВидДолга;
//		
//		// Когда реализация оформляется без учета НП в регистр прописывается пустое значение справочника СтавкиНП.
//		// Так же надо и здесь, чтобы потом связалась Реализация с ВводомОстатковДолга.
//		РегВзаим.СтавкаНП  = ?(ПустоеЗначение(СтавкаНП.Ставка) = 1, ПолучитьПустоеЗначение("Справочник.СтавкиНП"), СтавкаНП);
//		
//		РегВзаим.СуммаВал = СуммаВал;
//		РегВзаим.СуммаУпр = СуммаУпр;
//		РегВзаим.СуммаРуб = СуммаРуб;
//		РегВзаим.ОценкаРуб= СуммаРуб;
//		РегВзаим.СуммаНП  = СуммаНП;
//		РегВзаим.Себестоимость  = Себестоимость;
//		    
//		РегКнига.КредДокумент =  ?(КредДокумент.Выбран()=1,КредДокумент,ТекущийДокумент());
//
//		РегКнига.ВидДолга  = ВидДолга;
//		РегКнига.СтавкаНДС = СтавкаНДС;
//		
//		РегКнига.СуммаРуб = СуммаРуб;
//		РегКнига.СуммаНДС = СуммаНДС;
//		РегКнига.СуммаНП  = СуммаНП;
//		
//		Если ЗнакДвижения = -1 Тогда
//			РегВзаим.ДвижениеРасходВыполнить();
//		ИначеЕсли ЗнакДвижения = +1 Тогда
//			РегВзаим.ДвижениеПриходВыполнить();             
//			Если (МетодОпределенияВыручки = Перечисление.МетодыОпределенияВыручки.ПоОплате)
//			   и (ВидДолга <> глВД.ДолгЗаТоварыПринятые)
//			   и (ФлагСвертки = 0) Тогда
//				// принятые на реализацию товары в книгу продаж не надо помещать
//				// по ним облагается НДС только комиссионное вознаграждение
//				// если метод ведения - по отгрузке - то в книге продаж тоже не нужен 
//				РегКнига.ДвижениеПриходВыполнить();
//			ИначеЕсли (МетодОпределенияВыручки = Перечисление.МетодыОпределенияВыручки.ПоОтгрузке)
//			   и (Договор.ВалютаВзаиморасчетов <> глРубли)
//			   и (ВидДолга <> глВД.ДолгЗаТоварыПринятые)
//			   и (ФлагСвертки = 0) Тогда
//				РегКнига.ДвижениеПриходВыполнить();
//				РегКнига.ДвижениеРасходВыполнить();
//			КонецЕсли;
//		ИначеЕсли ЗнакДвижения = 0 Тогда
//			РегКнига.ДвижениеПриходВыполнить();
//		КонецЕсли;
//		
//	КонецЦикла;
//	                                   
КонецПроцедуры // ПроведениеПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРЕДОПРЕДЕЛЕННЫЕ ПРОЦЕДУРЫ
//
//******************************************************************************
// Предопределенная процедура.
//
Процедура ОбработкаПроведения(Отказ, Режим)   
//	
//	// Проверка заполненности обязательных реквизитов.
//	СтрокаРеквизитов = "";
//	
//	Если ФлагСвертки = 0 Тогда
//		СтрокаРеквизитов = "Фирма,Контрагент,Договор";
//	Иначе
//		СтрокаРеквизитов = "Фирма,Контрагент";
//	КонецЕсли;
//
//	Если глВсеРеквизитыДокументаЗаполнены(Контекст,СтрокаРеквизитов)=0 Тогда
//		Возврат;
//	КонецЕсли;
//	
//	// Проведение по регистрам оперативного учета.	
//	Если (ПустоеЗначение(ВидыДвижений) = 1) ИЛИ (Найти(ВидыДвижений, "Регистр") <> 0) Тогда
//		ПроведениеПоРегистрам();
//		
//		Если СтатусВозврата() = 0 Тогда
//			Возврат;
//		КонецЕсли;
//	КонецЕсли;
//	
//	глПриПроведении(Контекст, ВидыДвижений);
//	
КонецПроцедуры //ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, Режим)
	СуммаВал_Итог = ТабличнаяЧасть1.Итог("СуммаВал");
	СуммаРуб_Итог = ТабличнаяЧасть1.Итог("СуммаРуб");
	СуммаУпр_Итог = ТабличнаяЧасть1.Итог("СуммаУпр");
	СуммаНДС_Итог = ТабличнаяЧасть1.Итог("СуммаНДС");
	СуммаНП_Итог = ТабличнаяЧасть1.Итог("СуммаНП");
КонецПроцедуры
//
//////////////////////////////////////////////////////////////////////////////////
//// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
//
